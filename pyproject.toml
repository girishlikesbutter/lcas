[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "lcas-pytorch-shadow-engine"
version = "0.1.0"
description = "PyTorch GPU-accelerated satellite light curve generation system"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
authors = [
    {name = "LCAS Development Team"},
]
keywords = ["satellite", "lightcurve", "pytorch", "gpu", "ray-tracing", "shadow", "spice"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Astronomy",
    "Topic :: Scientific/Engineering :: Physics",
]

dependencies = [
    "numpy>=1.26.0,<2.0",
    "scipy>=1.11.0",
    "torch>=2.2.3",  # Required for CVE-2024-5480 fix
    "trimesh>=4.0.0",
    "spiceypy>=5.1.0",
    "numpy-quaternion>=2023.0.0",
    "pyyaml>=6.0.1",
    "matplotlib>=3.7.0",
    "imageio>=2.31.0",
    "tqdm>=4.66.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
    "isort>=5.12.0",
]

cuda = [
    "torch>=2.2.3",  # Ensure CUDA-enabled PyTorch
]

[project.scripts]
lcas-generate = "src.simulation.lightcurve_engine:main"
lcas-validate-orbit = "validate_orbit_animation:main"
lcas-validate-shadows = "validate_shadow_vectors_animation:main"

[project.urls]
Homepage = "https://github.com/lcas/pytorch-shadow-engine"
Documentation = "https://lcas.readthedocs.io"
Repository = "https://github.com/lcas/pytorch-shadow-engine"
Issues = "https://github.com/lcas/pytorch-shadow-engine/issues"

[tool.setuptools]
packages = ["src"]
include-package-data = true

[tool.setuptools.package-data]
src = ["py.typed"]

[tool.black]
line-length = 100
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'

[tool.isort]
profile = "black"
line_length = 100

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
testpaths = ["tests"]
addopts = "-ra -q --cov=src --cov-report=html --cov-report=term"

[tool.coverage.run]
source = ["src"]
omit = ["*/tests/*", "*/test_*.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if __name__ == .__main__.:",
    "raise AssertionError",
    "raise NotImplementedError",
]